<Project Sdk="Microsoft.NET.Sdk.Web">
    <Import Project="./Swagger.targets" />

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>enable</Nullable>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <SpaProxyServerUrl>http://localhost:3000</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.3" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.1" />
        <PackageReference Include="Microsoft.Identity.Client" Version="4.42.1" />
        <PackageReference Include="Microsoft.Identity.Web" Version="1.23.1" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
        <PackageReference Include="NSwag.AspNetCore" Version="13.15.5" />
        <PackageReference Include="NSwag.CodeGeneration" Version="13.15.5" />
        <PackageReference Include="NSwag.CodeGeneration.TypeScript" Version="13.15.5" />
        <PackageReference Include="NSwag.Core" Version="13.15.5" />
        <PackageReference Include="NSwag.Generation" Version="13.15.5" />
        <PackageReference Include="NSwag.Generation.AspNetCore" Version="13.15.5" />
        <PackageReference Include="NSwag.MSBuild" Version="13.15.5">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="6.5.0" />
        <PackageReference Include="Yarp.ReverseProxy" Version="2.0.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="ClientApp\cypress\fixtures\testAAS.json" />
        <Content Include="ClientApp\cypress\fixtures\resolutions.json" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
        <Folder Include="ClientApp\cypress\integration" />
        <Folder Include="ClientApp\src\generated-api" />
        <Folder Include="Properties\ServiceDependencies\" />
    </ItemGroup>

    <ItemGroup>
      <Reference Include="IO.Swagger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <HintPath>IO.Swagger.dll</HintPath>
      </Reference>
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Core\Core.csproj" />
    </ItemGroup>
    
    <ItemGroup>
        <!-- For integration tests -->
        <InternalsVisibleTo Include="Web.Tests" />      
    </ItemGroup>
    <PropertyGroup>
        <!-- For integration tests -->
        <PreserveCompilationContext>true</PreserveCompilationContext>
    </PropertyGroup>
    
    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js and yarn is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>
